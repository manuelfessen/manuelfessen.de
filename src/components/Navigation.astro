---
import { Icon } from "astro-icon";
import ThemeSwitcher from "./theme-switcher.astro";
import ThemeChange from "./ThemeChange.astro";

const navItems = [
  { title: "Home", url: "/" },
  { title: "Blog", url: "/posts" },
  { title: "Search", url: "/search" },
]
---
<div class="flex flex-col justify-center sm:mx-4">
  <nav class="flex items-center justify-between w-full relative max-w-3xl  pt-8 pb-8 sm:pb-16">
    <div class="ml-[-0.60rem]"> 
    <button
    id="open-nav-button"
    type="button"
    class="btn sm:hidden"
    aria-label="Navigation"
  >
    <Icon pack="mdi" name="menu" class="h-8" />
  </button>

      {navItems.map(({ title, url }) => (
      <a
        class="font-normal hidden md:inline-block p-1 sm:px-3 sm:py-2 rounded-lg hover:bg-gray-300 dark:hover:bg-gray-600 transition-all"
        href={url}
      >
        <span class="capsize">{title}</span>
      </a>
    ))}
    </div>

    <ThemeSwitcher />

    <div id="menu-modal" class="modal" aria-hidden="true">
      <div class="z-10 fixed inset-0 px-8 py-4 bg-white">
        <div class="space-y-4" role="dialog" aria-modal="true">
          <header class="text-right">
            <button
              id="close-nav-button"
              type="button"
              class="btn"
              aria-label="Close navigation"
            >
              <Icon pack="mdi" name="close" class="h-8" />
            </button>
          </header>
          <div class="flex justify-center">
            <Icon name="logomark" class="h-16" />
          </div>
          <nav>
            <ul class="flex flex-col">
              {navItems.map(({ title, url }) => (
                <li>
                  <a class="block py-4 text-xl text-center" href={url}>
                    {title}
                  </a>
                </li>
              ))}
            </ul>
          </nav>
        </div>
      </div>
    </div>
  </nav>
</div>

<script>
  import MicroModal from "micromodal";

  const menuModalId = "menu-modal";

  const menu = document.querySelector(`#${menuModalId} ul`);
  const openNavButton = document.querySelector("#open-nav-button");
  const closeNavButton = document.querySelector("#close-nav-button");

  const openMenu = () => {
    MicroModal.show(menuModalId);
  };

  const closeMenu = () => {
    MicroModal.close(menuModalId);
  };

  openNavButton.addEventListener("click", openMenu);
  closeNavButton.addEventListener("click", closeMenu);

  menu.addEventListener("click", (event) => {
    if (event.target.tagName === "A") {
      closeMenu();
    }
  });
</script>

<!-- https://github.com/withastro/compiler/issues/395 -->
<!-- <noscript>
  <style>
    #open-nav-button {
      @apply hidden;
    }
  </style>
</noscript> -->

<style>
  .modal.is-open {
    @apply inline-block;
  }
</style>
