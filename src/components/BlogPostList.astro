---
import type { Frontmatter, SiteMeta } from '@/types'
import BlogCard from './BlogCard.astro'

const posts = await Astro.glob<Frontmatter>('../pages/blog/*.mdx')
const casestudies = await Astro.glob<Frontmatter>('../pages/casestudies/*.mdx')

  const nonDraftPosts = [
    ...posts.filter(({ frontmatter }) => !frontmatter.draft),
    ...casestudies.filter(({ frontmatter }) => !frontmatter.draft)
].slice(-5);
const sortedPosts = nonDraftPosts.sort(
  ({ frontmatter: { publishedAt: a } }, { frontmatter: { publishedAt: b } }) =>
    new Date(b).valueOf() - new Date(a).valueOf()
)
  .slice(0, 15)

const pinnedPosts = sortedPosts.filter(({ frontmatter }) => frontmatter.pinned)
const unpinnedPosts = sortedPosts.filter(({ frontmatter }) => !frontmatter.pinned)
---

<section class='grid items-start grid-cols-1 gap-6 md:grid-cols-12'>
  <h1
    class='col-span-2 pt-8 text-lg font-extrabold text-gray-900 dark:text-gray-100 md:pt-0 md:text-right md:text-base md:font-normal md:text-opacity-60'
  >
    Writing
  </h1>
  <div class='col-span-10'>
    <div class='flex flex-col space-y-3'>
      {
        nonDraftPosts.length ? (
          <ol class='space-y-4'>
            {unpinnedPosts.map(({ frontmatter }) => (
              <li>
                <BlogCard {...frontmatter} />
              </li>
            ))}
          </ol>
        ) : (
          <p class='text-gray-600 dark:text-gray-300'>No posts yet.</p>
        )
      }
    </div>
  </div>
</section>
