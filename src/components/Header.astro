---
import { SITE } from "@config";
import LinkButton from "./LinkButton.astro";

export interface Props {
  activeNav?: "" | "work";
}

const { activeNav } = Astro.props;
---

<header>
  <a id="skip-to-content" href="#main-content">Skip to content</a>
  <nav class="nav-container">
    <div class="top-nav-wrap -ml-2">
      <div id="">
        <ul id="menu-items" class="flex">
          <li>
            <a href="/" class={activeNav === "" ? "active" : ""}>
              <span class="text-md md:textbaseg whitespace-nowrap font-bold"
                ><span class="pr-2">Manuel Fessen</span></span
              >
            </a>
          </li>
        </ul>
      </div>
      <div id="nav-right">
        {
          SITE.lightAndDarkMode && (
            <button
              id="theme-btn"
              class="focus-outline hidden sm:flex mr-2"
              title="Toggles light & dark"
              aria-label="auto"
              aria-live="polite"
            >
              <svg xmlns="http://www.w3.org/2000/svg" id="moon-svg">
                <path d="M20.742 13.045a8.088 8.088 0 0 1-2.077.271c-2.135 0-4.14-.83-5.646-2.336a8.025 8.025 0 0 1-2.064-7.723A1 1 0 0 0 9.73 2.034a10.014 10.014 0 0 0-4.489 2.582c-3.898 3.898-3.898 10.243 0 14.143a9.937 9.937 0 0 0 7.072 2.93 9.93 9.93 0 0 0 7.07-2.929 10.007 10.007 0 0 0 2.583-4.491 1.001 1.001 0 0 0-1.224-1.224zm-2.772 4.301a7.947 7.947 0 0 1-5.656 2.343 7.953 7.953 0 0 1-5.658-2.344c-3.118-3.119-3.118-8.195 0-11.314a7.923 7.923 0 0 1 2.06-1.483 10.027 10.027 0 0 0 2.89 7.848 9.972 9.972 0 0 0 7.848 2.891 8.036 8.036 0 0 1-1.484 2.059z" />
              </svg>
              <svg xmlns="http://www.w3.org/2000/svg" id="sun-svg">
                <path d="M6.993 12c0 2.761 2.246 5.007 5.007 5.007s5.007-2.246 5.007-5.007S14.761 6.993 12 6.993 6.993 9.239 6.993 12zM12 8.993c1.658 0 3.007 1.349 3.007 3.007S13.658 15.007 12 15.007 8.993 13.658 8.993 12 10.342 8.993 12 8.993zM10.998 19h2v3h-2zm0-17h2v3h-2zm-9 9h3v2h-3zm17 0h3v2h-3zM4.219 18.363l2.12-2.122 1.415 1.414-2.12 2.122zM16.24 6.344l2.122-2.122 1.414 1.414-2.122 2.122zM6.342 7.759 4.22 5.637l1.415-1.414 2.12 2.122zm13.434 10.605-1.414 1.414-2.122-2.122 1.414-1.414z" />
              </svg>
            </button>
          )
        }
        <ul id="menu-items" class="flex gap-x-2">
          <li class="flex">
            <a href="/work" class={activeNav === "work" ? "active" : ""}>
              work
            </a>
          </li>
          <li>
            <LinkButton
              href="https://www.linkedin.com/in/manuelfessen/"
              className={`focus-outline flex gap-1 sm:p-1`}
              ariaLabel="Link to LinkedIn"
              title="Link to LinkedIn"
              blank="true"
            >
              connect
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 24 24"><path d="M 5 3 C 3.895 3 3 3.895 3 5 L 3 19 C 3 20.105 3.895 21 5 21 L 19 21 C 20.105 21 21 20.105 21 19 L 21 5 C 21 3.895 20.105 3 19 3 L 5 3 z M 5 5 L 19 5 L 19 19 L 5 19 L 5 5 z M 7.7792969 6.3164062 C 6.9222969 6.3164062 6.4082031 6.8315781 6.4082031 7.5175781 C 6.4082031 8.2035781 6.9223594 8.7167969 7.6933594 8.7167969 C 8.5503594 8.7167969 9.0644531 8.2035781 9.0644531 7.5175781 C 9.0644531 6.8315781 8.5502969 6.3164062 7.7792969 6.3164062 z M 6.4765625 10 L 6.4765625 17 L 9 17 L 9 10 L 6.4765625 10 z M 11.082031 10 L 11.082031 17 L 13.605469 17 L 13.605469 13.173828 C 13.605469 12.034828 14.418109 11.871094 14.662109 11.871094 C 14.906109 11.871094 15.558594 12.115828 15.558594 13.173828 L 15.558594 17 L 18 17 L 18 13.173828 C 18 10.976828 17.023734 10 15.802734 10 C 14.581734 10 13.930469 10.406562 13.605469 10.976562 L 13.605469 10 L 11.082031 10 z"/></svg>
            </LinkButton>
          </li>
        </ul>
      </div>
    </div>
  </nav>
</header>

<style>
  #skip-to-content {
    @apply absolute -top-full left-16 z-50 bg-skin-accent px-3 py-2 text-skin-inverted transition-all focus:top-4;
  }
  .nav-container {
    @apply mx-auto flex max-w-2xl flex-col justify-between sm:flex-row;
  }
  .top-nav-wrap {
    @apply relative flex w-full items-start justify-between p-4 sm:py-8;
  }

  nav {
    @apply flex w-full flex-col sm:flex-row sm:space-x-4 sm:py-0;
  }
  nav ul {
    @apply mt-4 grid w-44 grid-cols-2 grid-rows-4 gap-x-2 gap-y-2 sm:ml-0 sm:mt-0 sm:w-auto sm:gap-x-5 sm:gap-y-0;
  }
  nav ul li {
    @apply col-span-2 flex;
  }
  nav ul li a {
    @apply w-full px-2 font-medium hover:text-skin-accent sm:my-0 sm:py-1;
  }
  nav ul li a {
    @apply text-center font-medium hover:text-skin-accent;
  }
  nav ul li:nth-last-child(2) a {
    @apply w-auto;
  }
  nav ul li:nth-last-child(1),
  nav ul li:nth-last-child(2) {
    @apply col-span-1;
  }
  nav button {
    @apply p-1;
  }
  nav button svg {
    @apply h-6 w-6 fill-skin-base hover:fill-skin-accent;
  }

  a.active {
    @apply text-skin-accent;
  }

  #theme-btn {
    @apply p-3 sm:p-1;
  }
  #theme-btn svg {
    @apply scale-125 hover:rotate-12 sm:scale-100;
  }

  svg {
    @apply h-4 w-4;
  }
  #nav-right {
    @apply flex justify-end;
  }
</style>

<script>
  /**function toggleNav() {
    // Toggle menu
    const menuBtn = document.querySelector(".hamburger-menu");
    const menuIcon = document.querySelector(".menu-icon");
    const menuItems = document.querySelector("#menu-items");

    menuBtn?.addEventListener("click", () => {
      const menuExpanded = menuBtn.getAttribute("aria-expanded") === "true";
      menuIcon?.classList.toggle("is-active");
      menuBtn.setAttribute("aria-expanded", menuExpanded ? "false" : "true");
      menuBtn.setAttribute(
        "aria-label",
        menuExpanded ? "Open Menu" : "Close Menu"
      );
      menuItems?.classList.toggle("display-none");
    });
  }

  toggleNav();

  // Runs on view transitions navigation
  document.addEventListener("astro:after-swap", toggleNav); */
</script>
