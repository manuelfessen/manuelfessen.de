---
import dayjs from 'dayjs'
import relativeTime from 'dayjs/plugin/relativeTime'
import BaseLayout from './BaseLayout.astro'
import TagCard from '@/components/TagCard.astro'
import Giscus from '@/components/Giscus.astro'
import { Image } from '@astrojs/image/components'
import { cx } from '@/lib/utils'
import type { MarkdownLayoutProps } from 'astro'
import type { Frontmatter, SiteMeta } from '@/types'
import '@/styles/syntaxHighlight.css'
import type { Metadata } from 'sharp'

interface Props extends MarkdownLayoutProps<Frontmatter> {}

const {
  title,
  description,
  publishedAt,
  updatedAt,
  tags,
  //comments = true,
  slug,
  minutesRead,
  hero,
} = Astro.props.frontmatter

const metadata: SiteMeta = {
  title: `${title}`,
  description,
  publishedAt,
}

const posts = await Astro.glob<Frontmatter>('../pages/blog/*.mdx')
const nonDraftPosts = posts.filter(({ frontmatter }) => !frontmatter.draft)
const sortedPosts = nonDraftPosts.sort(
  ({ frontmatter: { publishedAt: a } }, { frontmatter: { publishedAt: b } }) =>
    new Date(b).valueOf() - new Date(a).valueOf()
)

const currentPostIndex = sortedPosts.findIndex(({ frontmatter }) => frontmatter.slug === slug)
const prevPost = sortedPosts[currentPostIndex + 1]
const nextPost = sortedPosts[currentPostIndex - 1]

dayjs.extend(relativeTime)
---

<BaseLayout title={`${title} â€“ Manuel Fessen`} description={description}>

  {hero && <img class="rounded mb-4 mx-auto w-full" style="min-width: 80%;" loading="lazy" src={hero} alt={title} />}
  <h1 class='mb-6 text-2xl font-bold xl:text-3xl  tracking-tight'>{title}</h1>
  <div class='flex items-center justify-between md:flex-row md:items-center mb-4'>
    <div class='flex items-center'>
      <p class='text-sm text-gray-700 dark:text-gray-300'>
        <span>Published at</span>
        <time
          class='text-gray-600 dark:text-gray-200 font-semibold'
          datetime={dayjs(publishedAt).toISOString()}
          title={dayjs(publishedAt).fromNow()}
        >
          {dayjs(publishedAt).format('DD MMMM YYYY')}
        </time>
        {
          updatedAt && (
            <>
              <span>,&nbsp;</span>
              <br class='sm:hidden' />
              <span>modified on</span>
              <time
                class='text-gray-600 dark:text-gray-200 font-semibold'
                datetime={dayjs(updatedAt).toISOString()}
                title={dayjs(updatedAt).fromNow()}
              >
                {dayjs(updatedAt).format('DD MMMM YYYY')}
              </time>
            </>
          )
        }
      </p>
    </div>
    <p class='text-sm text-gray-600 dark:text-gray-300 min-w-32 md:mt-0'>{minutesRead}</p>
  </div>
  <article
    class={cx(
      'prose lg:prose-lg dark:prose-invert',
      'prose-hr:transition-colors prose-hr:duration-300',
      'prose-pre:border-2 prose-pre:border-gray-200 dark:prose-pre:border-gray-700',
      'prose-code:text-pink-500'
    )}
  >
    <slot />
  </article>
  <div class='flex flex-col lg:flex-row gap-2 w-full mt-10'>
    {
      prevPost && (
        <a
          href={`/blog/${prevPost.frontmatter.slug}`}
          class={cx(
            'grow flex flex-col p-3 sm:p-4 border border-grey-200 dark:border-gray-800 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-800 transition-colors duration-300',
            nextPost ? 'lg:w-1/2' : 'lg:w-full'
          )}
        >
          <p class='text-gray-600 dark:text-gray-300'>Previous post</p>
          <p class='text-black dark:text-white'>{prevPost.frontmatter.title}</p>
        </a>
      )
    }
    {
      nextPost && (
        <a
          href={`/blog/${nextPost.frontmatter.slug}`}
          class={cx(
            'grow flex flex-col p-3 sm:p-4 border border-grey-200 dark:border-gray-800 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-800 transition-colors duration-300',
            prevPost ? 'lg:w-1/2 lg:items-end' : 'lg:w-full'
          )}
        >
          <p class='text-gray-600 dark:text-gray-300'>Next post</p>
          <p class='text-black dark:text-white'>{nextPost.frontmatter.title}</p>
        </a>
      )
    }
  </div>
  
</BaseLayout>